<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="ComboBox">
        <Style.Resources>
            <Style x:Key="ComboBoxItemContainerStyle" TargetType="ComboBoxItem">
                <Setter Property="BorderThickness" Value="0" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border
                                x:Name="border"
                                Padding="6,4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MDSaveEditor.Theme.DataGrid.HoverBackgroundBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="ClickMode" Value="Press" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border
                                x:Name="templateRoot"
                                Background="{DynamicResource MDSaveEditor.Theme.Button.BackgroundBrush}"
                                BorderBrush="{DynamicResource MDSaveEditor.Theme.Button.BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="splitBorder"
                                    Margin="0"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                    HorizontalAlignment="Right"
                                    BorderBrush="Transparent"
                                    BorderThickness="1,0,0,0"
                                    SnapsToDevicePixels="True">
                                    <Path
                                        x:Name="arrow"
                                        Width="8" Height="8"
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{DynamicResource MDSaveEditor.Theme.ForegroundBrush}"
                                        Stretch="Uniform"
                                        Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" />
                                </Border>
                            </Border>

                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsEditable}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MDSaveEditor.Theme.Button.BackgroundBrush}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MDSaveEditor.Theme.Button.BorderBrush}" />
                                    <Setter TargetName="splitBorder" Property="Background"  Value="{DynamicResource MDSaveEditor.Theme.Button.BackgroundBrush}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource MDSaveEditor.Theme.Button.BorderBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsEditable}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background"  Value="{DynamicResource MDSaveEditor.Theme.Button.HoverBackgroundBrush}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsEditable}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MDSaveEditor.Theme.Button.HoverBackgroundBrush}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsEditable}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MDSaveEditor.Theme.Button.PressedBackgroundBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsEditable}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MDSaveEditor.Theme.Button.PressedBackgroundBrush}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource MDSaveEditor.Theme.Control.DisabledBrush}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsEditable}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MDSaveEditor.Theme.Button.DisabledBackgroundBrush}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MDSaveEditor.Theme.Control.DisabledBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsEditable}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MDSaveEditor.Theme.Button.DisabledBackgroundBrush}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource MDSaveEditor.Theme.Control.DisabledBrush}" />
                                    <Setter TargetName="splitBorder" Property="Background"  Value="{DynamicResource MDSaveEditor.Theme.Button.DisabledBackgroundBrush}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource MDSaveEditor.Theme.Control.DisabledBrush}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                    </Grid.ColumnDefinitions>

                    <Popup
                        x:Name="PART_Popup"
                        Grid.ColumnSpan="2"
                        Margin="1"
                        AllowsTransparency="True"
                        Placement="Bottom"
                        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                        IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                        <Border
                            x:Name="dropDownBorder"
                            MinWidth="{Binding ElementName=templateRoot, Path=ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Background="{DynamicResource MDSaveEditor.Theme.Control.BackgroundBrush}"
                            TextElement.Foreground="{DynamicResource MDSaveEditor.Theme.ForegroundBrush}"
                            BorderBrush="{DynamicResource MDSaveEditor.Theme.Control.BorderBrush}"
                            BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                        x:Name="canvas"
                                        Width="0" Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            x:Name="opaqueRect"
                                            Width="{Binding ElementName=dropDownBorder, Path=ActualWidth}"
                                            Height="{Binding ElementName=dropDownBorder, Path=ActualHeight}"
                                            Fill="{Binding ElementName=dropDownBorder, Path=Background}" />
                                    </Canvas>
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>

                    <ToggleButton
                        x:Name="toggleButton"
                        Grid.ColumnSpan="2"
                        Style="{DynamicResource ComboBoxToggleButton}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" />

                    <ContentPresenter
                        x:Name="contentPresenter"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        IsHitTestVisible="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="False">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="True" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="ComboBox">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                    </Grid.ColumnDefinitions>

                    <Popup
                        x:Name="PART_Popup"
                        Grid.ColumnSpan="2"
                        Margin="1"
                        AllowsTransparency="True"
                        Placement="Bottom"
                        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                        IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                        <Border
                            x:Name="dropDownBorder"
                            MinWidth="{Binding ElementName=templateRoot, Path=ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Background="{DynamicResource MDSaveEditor.Theme.Control.BackgroundBrush}"
                            TextElement.Foreground="{DynamicResource MDSaveEditor.Theme.ForegroundBrush}"
                            BorderBrush="{DynamicResource MDSaveEditor.Theme.Control.BorderBrush}"
                            BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                        x:Name="canvas"
                                        Width="0" Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            x:Name="opaqueRect"
                                            Width="{Binding ElementName=dropDownBorder, Path=ActualWidth}"
                                            Height="{Binding ElementName=dropDownBorder, Path=ActualHeight}"
                                            Fill="{Binding ElementName=dropDownBorder, Path=Background}" />
                                    </Canvas>
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>

                    <ToggleButton
                        x:Name="toggleButton"
                        Grid.ColumnSpan="2"
                        Style="{DynamicResource ComboBoxToggleButton}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" />

                    <TextBox
                        x:Name="PART_EditableTextBox" Margin="1"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        BorderThickness="0"
                        IsReadOnly="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly}"
                        IsEnabled="{TemplateBinding IsEnabled}" />
                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="False">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="True" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>

        <Setter Property="Padding" Value="7,5" />
        <Setter Property="Background" Value="{DynamicResource MDSaveEditor.Theme.Button.BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MDSaveEditor.Theme.ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MDSaveEditor.Theme.Button.BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemContainerStyle}" />

        <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MDSaveEditor.Theme.Control.DisabledBrush}" />
            </Trigger>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{DynamicResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>